[{"path":"https://boehringer-ingelheim.github.io/BayesianMCPMod/articles/Simulation_Example.html","id":"background-and-data","dir":"Articles","previous_headings":"","what":"Background and data","title":"Simulation Example of Bayesian MCPMod for Continuous Data","text":"vignette show use Bayesian MCPMod package trial planning continuous distributed data. [link vignette] focus indication MDD make use historical data included clinDR package. specifically trial results BRINTELLIX utilized establish informative prior control group.","code":""},{"path":"https://boehringer-ingelheim.github.io/BayesianMCPMod/articles/Simulation_Example.html","id":"calculation-of-a-map-prior","dir":"Articles","previous_headings":"","what":"Calculation of a MAP prior","title":"Simulation Example of Bayesian MCPMod for Continuous Data","text":"first step meta analytic prior calculated using historical data 5 trials (main endpoint CfB MADRS score 8 weeks). Please note information control group integrated (leading informative multicomponent prior control group), active groups non-informative prior specified.","code":"data(\"metaData\") testdata    <- as.data.frame(metaData) dataset     <- filter(testdata, bname == \"BRINTELLIX\") histcontrol <- filter(dataset, dose == 0, primtime == 8, indication == \"MAJOR DEPRESSIVE DISORDER\")  ##Create MAP Prior hist_data <- data.frame(   trial = histcontrol$nctno,   est   = histcontrol$rslt,   se    = histcontrol$se,   sd    = histcontrol$sd,   n     = histcontrol$sampsize)  dose_levels <- c(0, 2.5, 5, 10, 20)  prior_list <- getPriorList(   hist_data   = hist_data,   dose_levels = dose_levels)"},{"path":"https://boehringer-ingelheim.github.io/BayesianMCPMod/articles/Simulation_Example.html","id":"specification-of-new-trial-design","dir":"Articles","previous_headings":"","what":"Specification of new trial design","title":"Simulation Example of Bayesian MCPMod for Continuous Data","text":"hypothetical new trial plan 4 active dose levels \\(2.5, 5, 10, 20\\) specify broad set potential dose-response relationships, including linear, exponential, emax sigEMax model. Furthermore assume maximum effect -3 top control (.e. assuming active treatment can reduce MADRS score 8 weeks 15.8) plan trial 80 patients active groups 60 patients control.","code":"#Pre-Specification (B)MCPMod   ## candidate models for MCPMod # linear function - no guestimates needed exp     <- DoseFinding::guesst(d     = 5,                                p     = c(0.2),                                model = \"exponential\",                                Maxd  = max(dose_levels)) emax    <- DoseFinding::guesst(d     = 2.5,                                p     = c(0.9),                                model = \"emax\") sigemax<-  DoseFinding::guesst(d     = c(2.5,5),                                p     = c(0.1,0.6),                                model = \"sigEmax\") #beta <- DoseFinding::guesst(d=5, p=0.8, model=\"betaMod\", dMax=1, scal=1.2, Maxd=20)  mods <- DoseFinding::Mods(   linear      = NULL,   emax        = emax,   exponential = exp,   sigEmax     = sigemax,   #betaMod     = beta,   doses       = dose_levels,   maxEff      = -3,   placEff     = -12.8)  n_patients=c(60,80,80,80,80)"},{"path":"https://boehringer-ingelheim.github.io/BayesianMCPMod/articles/Simulation_Example.html","id":"calculation-of-success-probabilities","dir":"Articles","previous_headings":"","what":"Calculation of success probabilities","title":"Simulation Example of Bayesian MCPMod for Continuous Data","text":"calculate success probabilities different assumed dose-response models specified trial design apply assessDesign function. alternative design evaluate design overall sample size putting patients highest dose group (control). specific trial setting adapted allocation ratio leads increased success probabilities assumed dose response relationships.","code":"success_probabilities<-assessDesign (n_patients=n_patients,   mods=mods,   prior_list=prior_list) success_probabilities #> $linear #> Bayesian Multiple Comparison Procedure #>   Estimated Success Rate:  0.669  #>   N Simulations:           1000 #> Model Significance Frequencies #>      linear        emax exponential     sigEmax  #>       0.597       0.230       0.588       0.475  #>  #> $emax #> Bayesian Multiple Comparison Procedure #>   Estimated Success Rate:  0.704  #>   N Simulations:           1000 #> Model Significance Frequencies #>      linear        emax exponential     sigEmax  #>       0.246       0.665       0.205       0.322  #>  #> $exponential #> Bayesian Multiple Comparison Procedure #>   Estimated Success Rate:  0.666  #>   N Simulations:           1000 #> Model Significance Frequencies #>      linear        emax exponential     sigEmax  #>       0.605       0.208       0.605       0.437  #>  #> $sigEmax #> Bayesian Multiple Comparison Procedure #>   Estimated Success Rate:  0.8  #>   N Simulations:           1000 #> Model Significance Frequencies #>      linear        emax exponential     sigEmax  #>       0.607       0.430       0.558       0.765 success_probabilities_uneq<-assessDesign (n_patients=c(80,60,60,60,120),   mods=mods,   prior_list=prior_list) success_probabilities_uneq #> $linear #> Bayesian Multiple Comparison Procedure #>   Estimated Success Rate:  0.799  #>   N Simulations:           1000 #> Model Significance Frequencies #>      linear        emax exponential     sigEmax  #>       0.743       0.432       0.735       0.670  #>  #> $emax #> Bayesian Multiple Comparison Procedure #>   Estimated Success Rate:  0.844  #>   N Simulations:           1000 #> Model Significance Frequencies #>      linear        emax exponential     sigEmax  #>       0.399       0.805       0.369       0.538  #>  #> $exponential #> Bayesian Multiple Comparison Procedure #>   Estimated Success Rate:  0.807  #>   N Simulations:           1000 #> Model Significance Frequencies #>      linear        emax exponential     sigEmax  #>       0.756       0.394       0.755       0.656  #>  #> $sigEmax #> Bayesian Multiple Comparison Procedure #>   Estimated Success Rate:  0.864  #>   N Simulations:           1000 #> Model Significance Frequencies #>      linear        emax exponential     sigEmax  #>       0.717       0.638       0.684       0.824"},{"path":"https://boehringer-ingelheim.github.io/BayesianMCPMod/articles/analysis_normal.html","id":"background-and-data","dir":"Articles","previous_headings":"","what":"Background and data","title":"Analysis Example of Bayesian MCPMod for Continuous Data","text":"vignette show use Bayesian MCPMod package continuous distributed data. Hereby focus utilization informative prior BayesianMCPMod evaluation single trial. use data included clinDR package. specifically trial results BRINTELLIX used illustrate specification informative prior usage prior bayesian evaluation (hypothetical) new trial. information around BRINTELLIX added…","code":""},{"path":"https://boehringer-ingelheim.github.io/BayesianMCPMod/articles/analysis_normal.html","id":"calculation-of-a-map-prior","dir":"Articles","previous_headings":"","what":"Calculation of a MAP prior","title":"Analysis Example of Bayesian MCPMod for Continuous Data","text":"first step meta analytic prior calculated using historical data 4 trials (main endpoint CfB MADRS score 8 weeks). Please note information control group integrated (leading informative multicomponent prior control group), active groups non-informative prior specified.","code":"data(\"metaData\") testdata    <- as.data.frame(metaData) dataset     <- filter(testdata, bname == \"BRINTELLIX\") histcontrol <- filter(dataset, dose == 0, primtime == 8, indication == \"MAJOR DEPRESSIVE DISORDER\",protid!=6)  ##Create MAP Prior hist_data <- data.frame(   trial = histcontrol$nctno,   est   = histcontrol$rslt,   se    = histcontrol$se,   sd    = histcontrol$sd,   n     = histcontrol$sampsize)  dose_levels <- c(0, 2.5, 5, 10)  prior_list <- getPriorList(   hist_data   = hist_data,   dose_levels = dose_levels)"},{"path":"https://boehringer-ingelheim.github.io/BayesianMCPMod/articles/analysis_normal.html","id":"specifications-new-trial","dir":"Articles","previous_headings":"","what":"Specifications new trial","title":"Analysis Example of Bayesian MCPMod for Continuous Data","text":"use trial ct.gov number NCT00635219 exemplary new trial. able apply bayesian MCPMod approach, candidate models need specified. Since 3 active dose levels limit set candidate models linear, exponential emax model.","code":"#Pre-Specification (B)MCPMod   ## candidate models for MCPMod # linear function - no guestimates needed exp     <- DoseFinding::guesst(d     = 5,                                p     = c(0.2),                                model = \"exponential\",                                Maxd  = max(dose_levels)) emax    <- DoseFinding::guesst(d     = 2.5,                                p     = c(0.9),                                model = \"emax\")   mods <- DoseFinding::Mods(   linear      = NULL,   emax        = emax,   exponential = exp,   doses       = dose_levels,   maxEff      = -1,   placEff     = -12.8)  new_trial <- filter(dataset, primtime == 8, indication == \"MAJOR DEPRESSIVE DISORDER\",protid==6) n_patients <- c(150, 142, 147, 149)"},{"path":"https://boehringer-ingelheim.github.io/BayesianMCPMod/articles/analysis_normal.html","id":"combination-of-prior-information-and-trial-results","dir":"Articles","previous_headings":"","what":"Combination of prior information and trial results","title":"Analysis Example of Bayesian MCPMod for Continuous Data","text":"outlined citePaper, first step posterior calculated combining prior information estimated results new trial.","code":"#Simulation of new trial  ##Note: This step should not be required, as we provide summary measures directly from the new trial data_emax <- simulateData(   n_patients  = n_patients,   dose_levels = dose_levels,   sd          = attr(prior_list, \"sd_tot\"),   mods        = mods,   true_model  = \"emax\")  posterior <- getPosterior(prior=prior_list,data=data_emax,                                mu_hat = new_trial$rslt,                                sd_hat = new_trial$se)"},{"path":"https://boehringer-ingelheim.github.io/BayesianMCPMod/articles/analysis_normal.html","id":"execution-of-bayesian-mcpmod-test-step","dir":"Articles","previous_headings":"","what":"Execution of Bayesian MCPMod Test step","title":"Analysis Example of Bayesian MCPMod for Continuous Data","text":"execution testing step bayesian MCPMod critical value (probability scale) determined given alpha level. addition contrast matrix created. Please note different possibilities generate contrasts. information used input bayesian MCP testing function. testing step significant indicating non-flat dose-response shape. detail p-values emax model significant one.","code":"crit_pval <- getCritProb(   mods           = mods,   dose_levels    = dose_levels,   dose_weights   = n_patients,   alpha_crit_val = 0.1)  contr_mat_prior <- getContrMat(   mods           = mods,   dose_levels    = dose_levels,   dose_weights   = n_patients,   prior_list     = prior_list)  #This would be the most reasonable output, but since it is not exported it is currently not usable. #BMCP_result<-BayesMCPi(posterior_i = posterior,      #     contr_mat       = contr_mat_prior,        #    crit_prob       = crit_pval)  BMCP_result <- performBayesianMCP(   posteriors_list = posterior,   contr_mat       = contr_mat_prior,   crit_prob       = crit_pval)  #BMCP_result2 <- performBayesianMCPMod( #    posteriors_list = posterior_emax, #    contr_mat       = contr_mat_prior,  #    crit_prob       = crit_pval)  #BMCP_result2  BMCP_result #> Bayesian Multiple Comparison Procedure #>   Estimated Success Rate:  1  #>   N Simulations:           1"},{"path":"https://boehringer-ingelheim.github.io/BayesianMCPMod/articles/analysis_normal.html","id":"model-fitting-and-visualization-of-results","dir":"Articles","previous_headings":"","what":"Model fitting and visualization of results","title":"Analysis Example of Bayesian MCPMod for Continuous Data","text":"model fitting step posterior distribution used basis. simplified full fitting performed. Please note models fitted data even though significant testing step. plotting bootstrap based credible intervals (50% 95%) shown well.  # Additional notes TBD, whether certain wrapper functions mentioned.","code":"#Model fit post_observed <- posterior model_shapes  <- c(\"linear\", \"emax\", \"exponential\")  # Option a) Simplified approach by using frequentist idea fit_simple <- getModelFits(   models      = model_shapes,   dose_levels = dose_levels,   posterior   = post_observed,   simple      = TRUE)  # Option b) Making use of the complete posterior distribution fit <- getModelFits(   models      = model_shapes,   dose_levels = dose_levels,   posterior   = post_observed,   simple      = FALSE)  plot(fit,cr_bands=TRUE) plot(fit_simple, cr_bands = TRUE)"},{"path":"https://boehringer-ingelheim.github.io/BayesianMCPMod/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Sebastian Bossert. Author. Stephan Wojciekowski. Author, maintainer. Lars Andersen. Author. Boehringer Ingelheim Pharma GmbH & Co. KG. Copyright holder, funder.","code":""},{"path":"https://boehringer-ingelheim.github.io/BayesianMCPMod/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Bossert S, Wojciekowski S, Andersen L (2023). BayesianMCPMod: Bayesian MCPMod. R package version 0.1.3-2, https://github.com/Boehringer-Ingelheim/BayesianMCPMod.","code":"@Manual{,   title = {BayesianMCPMod: Bayesian MCPMod},   author = {Sebastian Bossert and Stephan Wojciekowski and Lars Andersen},   year = {2023},   note = {R package version 0.1.3-2},   url = {https://github.com/Boehringer-Ingelheim/BayesianMCPMod}, }"},{"path":"https://boehringer-ingelheim.github.io/BayesianMCPMod/index.html","id":"the-bayesianmcpmod-package","dir":"","previous_headings":"","what":"Bayesian MCPMod","title":"Bayesian MCPMod","text":"…","code":""},{"path":"https://boehringer-ingelheim.github.io/BayesianMCPMod/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Bayesian MCPMod","text":"development version can installed repository.","code":"# install.packages(\"remotes\") remotes::install_github(\"https://github.com/Boehringer-Ingelheim/BayesianMCPmod\")"},{"path":"https://boehringer-ingelheim.github.io/BayesianMCPMod/index.html","id":"documentation","dir":"","previous_headings":"","what":"Documentation","title":"Bayesian MCPMod","text":"package documentation hosted .","code":""},{"path":"https://boehringer-ingelheim.github.io/BayesianMCPMod/index.html","id":"contributing","dir":"","previous_headings":"","what":"Contributing","title":"Bayesian MCPMod","text":"…","code":""},{"path":"https://boehringer-ingelheim.github.io/BayesianMCPMod/reference/assessDesign.html","id":null,"dir":"Reference","previous_headings":"","what":"assessDesign — assessDesign","title":"assessDesign — assessDesign","text":"assessDesign","code":""},{"path":"https://boehringer-ingelheim.github.io/BayesianMCPMod/reference/assessDesign.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"assessDesign — assessDesign","text":"","code":"assessDesign(   n_patients,   mods,   prior_list,   n_sim = 1000,   alpha_crit_val = 0.05,   simple = TRUE )"},{"path":"https://boehringer-ingelheim.github.io/BayesianMCPMod/reference/assessDesign.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"assessDesign — assessDesign","text":"n_patients tbd mods tbd prior_list tbd n_sim tbd alpha_crit_val tbd simple tbd","code":""},{"path":"https://boehringer-ingelheim.github.io/BayesianMCPMod/reference/getBootstrapBands.html","id":null,"dir":"Reference","previous_headings":"","what":"getBootstrapBands — getBootstrapBands","title":"getBootstrapBands — getBootstrapBands","text":"getBootstrapBands","code":""},{"path":"https://boehringer-ingelheim.github.io/BayesianMCPMod/reference/getBootstrapBands.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"getBootstrapBands — getBootstrapBands","text":"","code":"getBootstrapBands(   model_fits,   n_samples = 1000,   alpha = c(0.05, 0.5),   avg_fit = TRUE,   dose_seq = NULL )"},{"path":"https://boehringer-ingelheim.github.io/BayesianMCPMod/reference/getBootstrapBands.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"getBootstrapBands — getBootstrapBands","text":"model_fits tbd n_samples tbd alpha tbd avg_fit tbd dose_seq tbd","code":""},{"path":"https://boehringer-ingelheim.github.io/BayesianMCPMod/reference/getBootstrapBands.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"getBootstrapBands — getBootstrapBands","text":"tbd","code":""},{"path":"https://boehringer-ingelheim.github.io/BayesianMCPMod/reference/getContrMat.html","id":null,"dir":"Reference","previous_headings":"","what":"getContrMat — getContrMat","title":"getContrMat — getContrMat","text":"getContrMat","code":""},{"path":"https://boehringer-ingelheim.github.io/BayesianMCPMod/reference/getContrMat.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"getContrMat — getContrMat","text":"","code":"getContrMat(mods, dose_levels, dose_weights, prior_list)"},{"path":"https://boehringer-ingelheim.github.io/BayesianMCPMod/reference/getContrMat.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"getContrMat — getContrMat","text":"mods tbd dose_levels tbd dose_weights tbd prior_list tbd","code":""},{"path":"https://boehringer-ingelheim.github.io/BayesianMCPMod/reference/getCritProb.html","id":null,"dir":"Reference","previous_headings":"","what":"getCritProb — getCritProb","title":"getCritProb — getCritProb","text":"getCritProb","code":""},{"path":"https://boehringer-ingelheim.github.io/BayesianMCPMod/reference/getCritProb.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"getCritProb — getCritProb","text":"","code":"getCritProb(mods, dose_levels, dose_weights, alpha_crit_val)"},{"path":"https://boehringer-ingelheim.github.io/BayesianMCPMod/reference/getCritProb.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"getCritProb — getCritProb","text":"mods tbd dose_levels tbd dose_weights tbd alpha_crit_val tbd","code":""},{"path":"https://boehringer-ingelheim.github.io/BayesianMCPMod/reference/getModelFits.html","id":null,"dir":"Reference","previous_headings":"","what":"getModelFits — getModelFits","title":"getModelFits — getModelFits","text":"getModelFits","code":""},{"path":"https://boehringer-ingelheim.github.io/BayesianMCPMod/reference/getModelFits.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"getModelFits — getModelFits","text":"","code":"getModelFits(models, dose_levels, posterior, simple = FALSE)"},{"path":"https://boehringer-ingelheim.github.io/BayesianMCPMod/reference/getModelFits.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"getModelFits — getModelFits","text":"models tbd dose_levels tbd posterior tbd simple tbd","code":""},{"path":"https://boehringer-ingelheim.github.io/BayesianMCPMod/reference/getPosterior.html","id":null,"dir":"Reference","previous_headings":"","what":"getPosterior — getPosterior","title":"getPosterior — getPosterior","text":"getPosterior","code":""},{"path":"https://boehringer-ingelheim.github.io/BayesianMCPMod/reference/getPosterior.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"getPosterior — getPosterior","text":"","code":"getPosterior(data, prior_list, mu_hat = NULL, sd_hat = NULL)"},{"path":"https://boehringer-ingelheim.github.io/BayesianMCPMod/reference/getPosterior.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"getPosterior — getPosterior","text":"data tbd prior_list prior_list mu_hat tbd sd_hat tbd","code":""},{"path":"https://boehringer-ingelheim.github.io/BayesianMCPMod/reference/getPriorList.html","id":null,"dir":"Reference","previous_headings":"","what":"getPriorList — getPriorList","title":"getPriorList — getPriorList","text":"getPriorList","code":""},{"path":"https://boehringer-ingelheim.github.io/BayesianMCPMod/reference/getPriorList.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"getPriorList — getPriorList","text":"","code":"getPriorList(hist_data, dose_levels, dose_names = NULL, robustify_weight = 0.5)"},{"path":"https://boehringer-ingelheim.github.io/BayesianMCPMod/reference/getPriorList.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"getPriorList — getPriorList","text":"hist_data tbd dose_levels tbd dose_names prior_list robustify_weight tbd","code":""},{"path":"https://boehringer-ingelheim.github.io/BayesianMCPMod/reference/performBayesianMCP.html","id":null,"dir":"Reference","previous_headings":"","what":"BayesianMCP — performBayesianMCP","title":"BayesianMCP — performBayesianMCP","text":"BayesianMCP","code":""},{"path":"https://boehringer-ingelheim.github.io/BayesianMCPMod/reference/performBayesianMCP.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"BayesianMCP — performBayesianMCP","text":"","code":"performBayesianMCP(posteriors_list, contr_mat, crit_prob)"},{"path":"https://boehringer-ingelheim.github.io/BayesianMCPMod/reference/performBayesianMCP.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"BayesianMCP — performBayesianMCP","text":"posteriors_list tbd contr_mat tbd crit_prob tbd","code":""},{"path":"https://boehringer-ingelheim.github.io/BayesianMCPMod/reference/performBayesianMCPMod.html","id":null,"dir":"Reference","previous_headings":"","what":"performBayesianMCPMod — performBayesianMCPMod","title":"performBayesianMCPMod — performBayesianMCPMod","text":"performBayesianMCPMod","code":""},{"path":"https://boehringer-ingelheim.github.io/BayesianMCPMod/reference/performBayesianMCPMod.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"performBayesianMCPMod — performBayesianMCPMod","text":"","code":"performBayesianMCPMod(posteriors_list, contr_mat, crit_prob, simple = FALSE)"},{"path":"https://boehringer-ingelheim.github.io/BayesianMCPMod/reference/performBayesianMCPMod.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"performBayesianMCPMod — performBayesianMCPMod","text":"posteriors_list tbd contr_mat tbd crit_prob tbd simple tbd","code":""},{"path":"https://boehringer-ingelheim.github.io/BayesianMCPMod/reference/plot.modelFits.html","id":null,"dir":"Reference","previous_headings":"","what":"plot.modelFits — plot.modelFits","title":"plot.modelFits — plot.modelFits","text":"plot.modelFits","code":""},{"path":"https://boehringer-ingelheim.github.io/BayesianMCPMod/reference/plot.modelFits.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"plot.modelFits — plot.modelFits","text":"","code":"# S3 method for modelFits plot(   x,   gAIC = TRUE,   avg_fit = TRUE,   cr_intv = TRUE,   alpha_CrI = 0.05,   cr_bands = FALSE,   alpha_CrB = c(0.05, 0.5),   n_bs_smpl = 1000,   acc_color = \"orange\",   ... )"},{"path":"https://boehringer-ingelheim.github.io/BayesianMCPMod/reference/plot.modelFits.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"plot.modelFits — plot.modelFits","text":"x tbd object type modelFits gAIC tbd avg_fit tbd cr_intv tbd alpha_CrI tbd cr_bands tbd alpha_CrB tbd n_bs_smpl tbd acc_color tbd ... tbd","code":""},{"path":"https://boehringer-ingelheim.github.io/BayesianMCPMod/reference/plot.modelFits.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"plot.modelFits — plot.modelFits","text":"tbd","code":""},{"path":"https://boehringer-ingelheim.github.io/BayesianMCPMod/reference/simulateData.html","id":null,"dir":"Reference","previous_headings":"","what":"simulateData — simulateData","title":"simulateData — simulateData","text":"simulateData","code":""},{"path":"https://boehringer-ingelheim.github.io/BayesianMCPMod/reference/simulateData.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"simulateData — simulateData","text":"","code":"simulateData(   n_patients,   dose_levels,   sd,   mods,   n_sim = 1000,   true_model = NULL )"},{"path":"https://boehringer-ingelheim.github.io/BayesianMCPMod/reference/simulateData.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"simulateData — simulateData","text":"n_patients tbd dose_levels tbd sd tbd mods tbd n_sim tbd true_model tbd","code":""}]
